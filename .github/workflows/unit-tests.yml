name: Unit Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write  # Cần permission này để comment trên PR
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          nuget-${{ runner.os }}-

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        cache: true
        cache-dependency-path: '**/*.csproj'
        
    - name: Restore dependencies
      run: dotnet restore BlindTreasure.API.sln
      
    - name: Build
      run: dotnet build BlindTreasure.API.sln --no-restore --configuration Release
      
    - name: Restore tools
      run: dotnet tool restore
      
    - name: Run unit tests
      run: |
        dotnet test BlindTreasure.API.sln \
          --no-build \
          --configuration Release \
          --verbosity normal \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults/ \
          --logger "trx;LogFileName=test-results.trx"
      
    - name: Generate coverage report
      run: |
        dotnet tool run reportgenerator \
          -reports:"./TestResults/**/coverage.cobertura.xml" \
          -targetdir:"./coveragereport" \
          -reporttypes:"Html;Badges;TextSummary;JsonSummary;MarkdownSummaryGithub"
      
    - name: Display coverage summary
      run: |
        echo "## 📊 Code Coverage Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat ./coveragereport/Summary.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📋 [Download detailed HTML report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
      
    - name: Comment coverage on PR
      if: github.event_name == 'pull_request'
      uses: marocchino/sticky-pull-request-comment@v2
      continue-on-error: true  # Không fail workflow nếu comment lỗi
      with:
        recreate: true
        header: coverage-report
        path: ./coveragereport/SummaryGithub.md
      
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-report
        path: ./coveragereport/**/*
        retention-days: 30  # Giữ artifacts 30 ngày
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: ./TestResults/**/*
        retention-days: 30
        
    - name: Extract and check coverage
      run: |
        # Extract coverage từ JSON để chính xác hơn
        COVERAGE=$(cat ./coveragereport/Summary.json | grep -o '"linecoverage": *"[^"]*"' | grep -o '[0-9]*\.*[0-9]*')
        echo "📈 Current coverage: $COVERAGE%"
        echo "COVERAGE=$COVERAGE" >> $GITHUB_ENV
        
        # Set minimum coverage threshold
        THRESHOLD=70
        echo "🎯 Minimum threshold: $THRESHOLD%"
        
        # So sánh coverage
        if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
          echo "❌ Coverage $COVERAGE% is below threshold $THRESHOLD%"
          echo "::error::Code coverage $COVERAGE% is below the required threshold of $THRESHOLD%"
          exit 1
        else
          echo "✅ Coverage $COVERAGE% meets threshold $THRESHOLD%"
        fi
        
    - name: Add coverage badge comment (fallback)
      if: github.event_name == 'pull_request' && failure()
      uses: actions/github-script@v7
      with:
        script: |
          const coverage = process.env.COVERAGE;
          const threshold = 70;
          const color = coverage >= threshold ? 'green' : 'red';
          
          const comment = `## 📊 Code Coverage Report
          
          ![Coverage](https://img.shields.io/badge/coverage-${coverage}%25-${color})
          
          **Current Coverage:** ${coverage}%  
          **Threshold:** ${threshold}%  
          **Status:** ${coverage >= threshold ? '✅ Passed' : '❌ Below threshold'}
          
          📋 [View detailed report in artifacts](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });